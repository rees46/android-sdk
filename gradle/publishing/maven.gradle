if (project.hasProperty('sonatype')) {
publishing {
    repositories {
        if (isPublishingInMavenLocal) {
            mavenLocal()
            println "Publishing to local maven repository (mavenLocal) due to flag isPublishingInMavenLocal=true"
        } else {
            println "Publishing to local maven repository"
        }

        maven {
            name = "sonatype"

            def repositoryId = System.getenv("SONATYPE_REPOSITORY_ID") ?: error("Missing env variable: SONATYPE_REPOSITORY_ID")

            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deployByRepositoryId/${repositoryId}/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            println "Configured Sonatype repository with URL: ${url}"

            credentials {
                username sonataUsername
                password sonataPassword
            }

        }
	}
}
}

nexusPublishing {
  repositories {
    sonatype {
      stagingProfileId = project.findProperty("stagingProfileId") ?: ""
      username = sonataUsername
      password = sonataPassword
      nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
      snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
    }
  }
}
